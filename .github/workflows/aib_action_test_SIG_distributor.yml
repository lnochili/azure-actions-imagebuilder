# https://help.github.com/en/actions/configuring-and-managing-workflows/persisting-workflow-data-using-artifacts
# Azure Image Builder work flow using Azure CLI and AIB Action

name: Azure workflow test sample
on:
  push:
    paths: 
      - master 
     # [ .github/workflows/aib_action_test_workflow.yml ]
#workflow using Image builder Action which takes Managed Image as source and Shared image gallery as distributor
jobs:
  custom-image-uri: ""
  job_1:
    name: Azure Image builder run 
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Github Action'
        uses: actions/checkout@master    
      - name: azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

#Image builder action with minimal inputs to build custom linux image as Managed Image  
      - name: 'Test Github action for Azure Image builder with Managed Image as Source'
        uses: azure/azureimagebuilder@v0
        with:
          resource-group-name: 'iblinuxgalleryrg'
          location: 'westus2'
          source-image: 'Ubuntu:Canonical:18.04-LTS:latest'
          source-os-type:: 'linux'
          source-image-type: 'ManagedImage'
          customizer-source:: $GITHUB_WORKSPACE/src/install.sh
          customizer-destination: /var/www/myapp
          imagebuilder-template-name: aib_managed_image_template
          build-timeout-in-minutes: 20 
   ########Distributor details #############
          dist-type: SharedGalleryImage  
          dist-resource-id: '/subscriptions/xxxxx-xxxx-xxxx/resourceGroups/XXX-SharedImageRG//providers/Microsoft.Compute/images/aib_linux_shared'
          dis-location: westus2, westcentralus
          runoutput-name: 'aib_sig_linux.ub18.04'
          artifactTags: "github-example: sig-distributor"
 
#Image builder action complete to build custom linux image with build artifacts with a ManagedImage as the source        
      - name: 'echo Image URI if Image builder step succeeded'
          #Persist the output of previous step
        if: ${{ success() }}
        run: 
         custom-image-uri = ${{ job_1.outputs.custom-image-uri }}
         echo $cusom-image-uri
            
          
                 
      
