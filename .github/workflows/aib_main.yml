# https://help.github.com/en/actions/configuring-and-managing-workflows/persisting-workflow-data-using-artifacts
# Azure Image Builder work flow using Azure CLI

name: Share data between jobs

on:
  [ issue, issue_comment ]

jobs:
  job_1:
    name: Azure Image builder run 
    runs-on: ubuntu-latest
    env:
      image_template_name: "UbuntuServer18.04LTS"
      run_output_name: $GITHUB_RUN_NUMBER
      type: "PlatformImage"
      distributor_resource_group: "iblinuxGalleryRG"
      image_gallery_name: "iblinuxGallery"
      image_definition: "iblinux"
      image_version: "0.1"
      image_location: "westus2"
      publisher: "Canonical"
      offer: "UbuntuServer"
      sku: "18.04-LTS"
      version: "latest"    
      os_type: "Linux"
      customizer_type: "Shell"
      customizer_name: "RunScriptFromSource"
      customizer_scriptUri: "https://raw.githubusercontent.com/lnochili/azure-actions-imagebuilder/master/.github/workflows/customizerscript.sh"

    steps:
      - name: 'Checkout Github Action'
        uses: actions/checkout@master
      
      - name: azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: azure Image builder prerequisites
        uses: azure/CLI@v1
        with:
          inlineScript: |
            mkdir $GITHUB_WORKSPACE/aib_local
            az account show --query id > $GITHUB_WORKSPACE/aib_local/subscriptionId.out
            az group create -n ${{ env.distributor_resource_group }} -l ${{ env.image_location }} 
            az sig create -g ${{ env.distributor_resource_group }}  --gallery-name ${{ env.image_gallery_name }} 
            az sig image-definition create -g ${{ env.distributor_resource_group }} --gallery-name ${{ env.image_gallery_name }} --gallery-image-definition ${{ env.image_definition }} --publisher ${{ env.publisher }} --offer ${{ env.offer }} --sku ${{ env.sku }} --os-type ${{env.os_type }} 
            cat $GITHUB_WORKSPACE/aib_local/subscriptionId.out
      - name: Create azure Image builder template   
        uses: azure/cli@v1
        with:
          inlineScript: | 
            temp=`cat $GITHUB_WORKSPACE/aib_local/subscriptionId.out`
            temp="${temp#\"}"
            subscriptionId="${temp%\"}"
            rgName=${{ env.distributor_resource_group }}
            imgLocation=${{ env.image_location }}
            imgDefinition=${{ env.image_definition }}
            runOutputName=${{ env.run_output_name }}
            userTags=${{ env.version }}$runOutputName
            curl https://raw.githubusercontent.com/lnochili/azure-actions-imagebuilder/master/PlatformImageTemplate-UbuntuLinuxCanonical.json -o ./PlatformImageTemplate-UbuntuLinuxCanonical.json
            sed -i -e "s/<subscriptionID>/$subscriptionId/g" ./PlatformImageTemplate-UbuntuLinuxCanonical.json
            sed -i -e "s/<region>/$imgLocation/g" ./PlatformImageTemplate-UbuntuLinuxCanonical.json
            sed -i -e "s/<ImageDefName>/$imgDefinition/g" ./PlatformImageTemplate-UbuntuLinuxCanonical.json
            sed -i -e "s/<runOutputName>/$runOutputName/g" ./PlatformImageTemplate-UbuntuLinuxCanonical.json
            sed -i -e "s/<resourceGroupID>/$rgName/g" ./PlatformImageTemplate-UbuntuLinuxCanonical.json
            sed -i -e "s/<artfactTags>/$userTags/g" ./PlatformImageTemplate-UbuntuLinuxCanonical.json
            cat ./PlatformImageTemplate-UbuntuLinuxCanonical.json
            az image builder create --resource-group ${{ env.distributor_resource_group }} --image-template ./PlatformImageTemplate-UbuntuLinuxCanonical.json --name ${{ env.image_template_name }}
      
      - name: Add Customizers to azure Image builder template
        uses: azure/cli@v1
        with:
          inlineScript: |
            az image builder  customizer add --resource-group ${{ env.distributor_resource_group }} -n ${{ env.image_template_name }}   --customizer-name ${{ env.customizer_name}} --type ${{ env.customizer_type }} --script-url ${{ env.customizer_scriptUri }} --defer
            ##az image builder  customizer add --resource-group ${{ env.distributor_resource_group }} -n ${{ env.image_template_name }}   --customizer-name "shell-script-inline" --inline-script ""sudo mkdir /buildArtifacts" \n "sudo cp ./PlatformImageTemplate-UbuntuLinuxCanonical.json /buildArtifacts/PlatformImageTemplate-UbuntuLinuxCanonical.json"" --defer   
      - name: Run azure Image builder template
        uses: azure/cli@v1
        with:   
          creds: ${{ secrets.AZURE_CREDENTIALS }}                       
          inlineScript: |
            #### Run Image Template Resource ###
            image_name={{ env.image_template_name }}
            az image builder run --resource-group ${{ env.distributor_resource_group }}  --name ${{ env.image_template_name }} 
            az sig image-version create --resource-group ${{ env.distributor_resource_group }} --gallery-name iblinuxgallery --gallery-image-definition iblinux --gallery-image-version 1.0.2 --managed-image $image_name
